name: "CodeQL Security Analysis"

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
  schedule:
    # Run at 6:00 UTC every Tuesday
    - cron: '0 6 * * 2'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Detect changes to determine which languages to analyze
  detect-languages:
    name: Detect Languages
    runs-on: ubuntu-latest
    outputs:
      python: ${{ steps.changes.outputs.python }}
      javascript: ${{ steps.changes.outputs.javascript }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for language changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            python:
              - 'server/**/*.py'
              - 'server/requirements.txt'
            javascript:
              - 'web/**/*.{js,jsx,ts,tsx}'
              - 'alice-tools/**/*.{js,ts}'
              - 'nlu-agent/**/*.{js,ts}'
              - '**/package.json'
              - '**/package-lock.json'

  # CodeQL analysis for Python
  analyze-python:
    name: Analyze Python
    runs-on: ubuntu-latest
    needs: detect-languages
    if: needs.detect-languages.outputs.python == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    timeout-minutes: 360
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: 'server/requirements.txt'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg portaudio19-dev python3-pyaudio

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
          config-file: ./.github/codeql/codeql-config-python.yml

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r server/requirements.txt

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:python"
          upload: true

  # CodeQL analysis for JavaScript/TypeScript
  analyze-javascript:
    name: Analyze JavaScript/TypeScript
    runs-on: ubuntu-latest
    needs: detect-languages
    if: needs.detect-languages.outputs.javascript == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    timeout-minutes: 360
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'web/package-lock.json'

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          config-file: ./.github/codeql/codeql-config-javascript.yml

      - name: Install dependencies
        run: |
          cd web && npm ci
          cd ../alice-tools && npm ci
          cd ../nlu-agent && npm ci
          cd ../tools && npm ci || true

      - name: Build TypeScript projects
        run: |
          cd alice-tools && npm run build
          cd ../nlu-agent && npm run build
          cd ../web && npm run build

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:javascript"
          upload: true

  # Security summary and recommendations
  security-summary:
    name: Security Analysis Summary
    runs-on: ubuntu-latest
    needs: [analyze-python, analyze-javascript]
    if: always()
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Security Analysis Summary
        run: |
          echo "## ðŸ”’ Security Analysis Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Languages Analyzed:" >> $GITHUB_STEP_SUMMARY
          echo "- **Python**: Server backend, AI agents, voice processing" >> $GITHUB_STEP_SUMMARY
          echo "- **JavaScript/TypeScript**: Web frontend, NLU agents, tooling" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Analysis Results:" >> $GITHUB_STEP_SUMMARY
          echo "- Python Analysis: ${{ needs.analyze-python.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- JavaScript Analysis: ${{ needs.analyze-javascript.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Security Focus Areas for Alice:" >> $GITHUB_STEP_SUMMARY
          echo "- **Voice Data Processing**: Secure handling of audio streams" >> $GITHUB_STEP_SUMMARY
          echo "- **API Integrations**: Safe OpenAI, Ollama, and Google APIs usage" >> $GITHUB_STEP_SUMMARY
          echo "- **Calendar/Gmail Access**: Proper OAuth and data protection" >> $GITHUB_STEP_SUMMARY
          echo "- **WebSocket Communications**: Secure real-time voice processing" >> $GITHUB_STEP_SUMMARY
          echo "- **Swedish NLU Data**: Privacy-compliant language processing" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Recommendations:" >> $GITHUB_STEP_SUMMARY
          echo "1. Review any security alerts in the GitHub Security tab" >> $GITHUB_STEP_SUMMARY
          echo "2. Keep dependencies updated with Dependabot" >> $GITHUB_STEP_SUMMARY
          echo "3. Monitor voice data processing for PII exposure" >> $GITHUB_STEP_SUMMARY
          echo "4. Validate API key rotation policies" >> $GITHUB_STEP_SUMMARY
          echo "5. Ensure secure storage of user voice profiles" >> $GITHUB_STEP_SUMMARY

      - name: Post security metrics
        if: github.event_name == 'schedule'
        run: |
          echo "ðŸ“Š Weekly security scan completed on $(date)" >> $GITHUB_STEP_SUMMARY
          echo "Next scheduled scan: $(date -d 'next tuesday 06:00' '+%Y-%m-%d %H:%M UTC')" >> $GITHUB_STEP_SUMMARY