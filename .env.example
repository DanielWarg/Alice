# =============================================================================
# Alice AI Assistant - Environment Configuration Template
# =============================================================================
# Copy this file to .env and fill in your actual values
# NEVER commit .env files with real secrets to version control
# =============================================================================

# =============================================================================
# 🔑 CRITICAL SECURITY KEYS (Required)
# =============================================================================

# OpenAI API Configuration (Required for hybrid voice features)
# Get your key from: https://platform.openai.com/account/api-keys
# Used for fast voice responses (<300ms) while complex processing stays local
OPENAI_API_KEY=sk-proj-your-openai-api-key-here
OPENAI_MODEL=gpt-4o-mini                     # Options: gpt-4o, gpt-4o-mini, gpt-4-turbo
OPENAI_REALTIME_MODEL=gpt-4o-realtime-preview-2024-10-01  # Realtime API model

# Optional: OpenWeather API for weather features
# Get your key from: https://openweathermap.org/api
OPENWEATHER_API_KEY=your-openweather-api-key-here

# =============================================================================
# 🎵 SPOTIFY INTEGRATION (Optional)
# =============================================================================

# Spotify API Credentials for music control
# Create app at: https://developer.spotify.com/dashboard
SPOTIFY_CLIENT_ID=your-spotify-client-id-here
SPOTIFY_CLIENT_SECRET=your-spotify-client-secret-here

# Redirect URI must match your Spotify app settings
# Dev: http://localhost:3000/spotify/callback
# Prod: https://your-domain.com/spotify/callback
SPOTIFY_REDIRECT_URI=http://localhost:3000/spotify/callback

# =============================================================================
# 📧 GOOGLE INTEGRATIONS (Optional)
# =============================================================================

# Google Calendar & Gmail OAuth (place JSON files in server/ directory)
# Get credentials from: https://console.cloud.google.com
# GOOGLE_CALENDAR_CREDENTIALS_PATH=server/calendar_credentials.json
# GOOGLE_GMAIL_CREDENTIALS_PATH=server/gmail_credentials.json

# =============================================================================
# 🤖 HARMONY AGENT SYSTEM
# =============================================================================

# Feature toggles
USE_HARMONY=false                            # Enable advanced agent reasoning
USE_TOOLS=false                              # Enable external tool integration

# Reasoning configuration
HARMONY_REASONING_LEVEL=low                  # Options: low, medium, high
HARMONY_TEMPERATURE_COMMANDS=0.2             # Temperature for command tasks (0.0-1.0)
HARMONY_TEMPERATURE_CREATIVE=0.6             # Temperature for creative tasks (0.0-1.0)

# =============================================================================
# 🔄 HYBRID ARCHITECTURE CONFIGURATION
# =============================================================================

# Voice architecture mode
VOICE_ARCHITECTURE=hybrid                   # Options: hybrid, local_only, cloud_first

# Intent routing for hybrid processing
INTENT_ROUTER_TIMEOUT_MS=50                 # Max time for intent classification
FAST_RESPONSE_TIMEOUT_MS=300                # OpenAI fast path timeout
THINK_RESPONSE_TIMEOUT_MS=2000              # Local AI think path timeout

# Fast path configuration (OpenAI Realtime)
FAST_PATH_ENABLED=true                      # Enable fast path routing
FAST_PATH_CONFIDENCE_THRESHOLD=0.8          # Confidence threshold for fast path
FAST_PATH_MAX_TOKENS=150                    # Token limit for fast responses

# Think path configuration (Local AI)
THINK_PATH_ENABLED=true                     # Enable think path routing
LOCAL_AI_MAX_TOKENS=2048                    # Token limit for local responses
LOCAL_AI_TEMPERATURE=0.3                    # Temperature for tool/reasoning tasks

# Privacy boundaries
PRIVACY_MODE=balanced                       # Options: strict, balanced, performance
ENABLE_OFFLINE_FALLBACK=true                # Enable offline fallback when APIs fail

# =============================================================================
# 🧠 NLU & LANGUAGE PROCESSING
# =============================================================================

# Natural Language Understanding
NLU_CONFIDENCE_THRESHOLD=0.85                # Minimum confidence for intent recognition (0.0-1.0)

# Swedish language settings
LANGUAGE=sv-SE                               # Primary language (sv-SE for Swedish)
TIMEZONE=Europe/Stockholm                    # Default timezone

# =============================================================================
# 🦙 LOCAL LLM CONFIGURATION
# =============================================================================

# Local model settings (for privacy/offline usage)
LOCAL_MODEL=gpt-oss:20b                     # Local model name
OLLAMA_HOST=http://127.0.0.1:11434         # Ollama service endpoint
USE_LOCAL_FIRST=true                        # Prefer local models when available
DEFAULT_PROVIDER=local                      # Options: local, openai

# Alternative local model paths
# TRANSFORMERS_MODEL_PATH=/absolute/path/to/gpt-oss-20b

# =============================================================================
# ⚙️ GENERATION & RESPONSE SETTINGS
# =============================================================================

# Text generation parameters
MAX_TOKENS=512                              # Maximum response length
TOP_P=0.9                                   # Nucleus sampling parameter (0.0-1.0)
TEMPERATURE=0.7                             # Response creativity (0.0-1.0)

# =============================================================================
# 🎙️ HYBRID VOICE PIPELINE CONFIGURATION
# =============================================================================

# Voice pipeline mode
# - hybrid: Smart routing between OpenAI Realtime + local AI (recommended)
# - dual: Both local and OpenAI voice processing
# - voicebox: Local voice processing only
# - voiceclient: OpenAI Realtime API only
VOICE_PIPELINE_MODE=hybrid

# Voice processing settings
ENABLE_WEBRTC=true                          # Enable WebRTC for real-time voice
VOICE_DEBUG=false                           # Enable voice pipeline debugging
TTS_CACHE_SIZE=1000                         # TTS cache size (number of entries)

# Swedish TTS/STT Configuration
STT_MODEL=whisper                           # Options: whisper, local
TTS_MODEL=piper                             # Options: piper, openai
PIPER_VOICE=sv_SE-nst-medium               # Swedish voice model

# =============================================================================
# 🔍 LOGGING & DEBUGGING
# =============================================================================

# Logging configuration
LOG_LEVEL=info                              # Options: debug, info, warning, error
STRUCTURED_LOGS=true                        # Enable JSON structured logging
LOG_FILE=alice.log                          # Log file path (optional)

# Debug settings
DEBUG_MODE=false                            # Enable debug mode
PROFILE_PERFORMANCE=false                   # Enable performance profiling

# =============================================================================
# 💾 DATABASE & STORAGE
# =============================================================================

# Database configuration
DATABASE_URL=sqlite:///data/alice.db        # SQLite database path
ENABLE_MEMORY_PERSISTENCE=true              # Enable conversation memory
MEMORY_RETENTION_DAYS=30                    # Days to keep conversation history

# File storage
UPLOAD_MAX_SIZE=10485760                    # Max upload size (10MB)
ALLOWED_EXTENSIONS=pdf,docx,txt,md          # Allowed file types

# =============================================================================
# 🌐 WEB INTERFACE SETTINGS
# =============================================================================

# Backend API settings
API_HOST=0.0.0.0                           # API bind address
API_PORT=8000                              # API port
CORS_ORIGINS=http://localhost:3000,http://localhost:3100  # Allowed CORS origins

# Frontend settings (for Next.js)
NEXT_PUBLIC_VOICE_MODE=hybrid              # Voice mode for frontend (hybrid recommended)
NEXT_PUBLIC_ALICE_BACKEND_URL=http://localhost:8000  # Backend URL
NEXT_PUBLIC_ENABLE_ANALYTICS=false         # Enable usage analytics

# =============================================================================
# 🔒 SECURITY SETTINGS
# =============================================================================

# Security configuration
ENABLE_RATE_LIMITING=true                  # Enable API rate limiting
RATE_LIMIT_REQUESTS=100                    # Requests per minute per IP
RATE_LIMIT_WINDOW=60                       # Rate limit window (seconds)

# CORS and security headers
ENABLE_SECURITY_HEADERS=true               # Enable security headers
CSP_REPORT_URI=                            # Content Security Policy report URI

# Session management
SESSION_SECRET=your-session-secret-here    # Session encryption key
SESSION_TIMEOUT=3600                       # Session timeout (seconds)

# =============================================================================
# 📊 MONITORING & METRICS
# =============================================================================

# Metrics collection
ENABLE_METRICS=true                        # Enable metrics collection
METRICS_PORT=9090                          # Prometheus metrics port
HEALTH_CHECK_INTERVAL=30                   # Health check interval (seconds)

# Error reporting
SENTRY_DSN=                                # Sentry error reporting DSN
ENABLE_ERROR_REPORTING=false               # Enable external error reporting

# =============================================================================
# 🏗️ DEPLOYMENT ENVIRONMENT
# =============================================================================

# Environment settings
ENVIRONMENT=development                     # Options: development, staging, production
NODE_ENV=development                       # Node.js environment
PYTHON_ENV=development                     # Python environment

# Feature flags for environments
ENABLE_DEMO_MODE=true                      # Enable demo mode with stubs
ENABLE_FIRST_RUN_TOUR=true                 # Enable first-run tutorial
SHOW_DEBUG_INFO=true                       # Show debug information in UI

# =============================================================================
# 📝 ADDITIONAL NOTES
# =============================================================================

# Environment-specific configurations:
# - Development: Use localhost URLs, enable debug features
# - Staging: Use staging credentials, reduced logging
# - Production: Use production credentials, minimal logging, enable security

# Security reminders:
# - Never commit this file with real values
# - Use different credentials for dev/staging/prod
# - Rotate API keys regularly
# - Monitor usage and set up alerts

# Hybrid Architecture Notes:
# - VOICE_ARCHITECTURE=hybrid balances speed with privacy
# - Simple queries (<300ms) use OpenAI Realtime for fast responses
# - Complex reasoning and tools stay local for privacy
# - PRIVACY_MODE=strict routes everything locally (slower but private)
# - PRIVACY_MODE=performance routes more to OpenAI (faster but less private)

# For more information, see:
# - VOICE_SETUP.md for hybrid voice configuration
# - docs/VOICE_HYBRID_ARCHITECTURE.md for technical details
# - docs/PRIVACY_MODEL.md for privacy boundaries
# - docs/OPERATIONS.md for monitoring hybrid systems
# - DEPLOYMENT.md for production setup
# - TROUBLESHOOTING.md for common issues
